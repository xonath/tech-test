<?php

namespace Tests\Feature;

use Tests\TestCase;

class StoreTest extends TestCase
{
    use BaseSetupTrait;

    protected array $goodHeader;
    protected array $badHeader;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->goodHeader = ['auth_token' => config('app.auth_token')];
        $this->badHeader = ['auth_token' => 'this-is-a-bad-token'];

        $this->setupBaseData();
    }

    public function test_a_store_can_be_created(): void
    {
        $payload = [
            "name" => "My Shop",
            "postcode" => "AB11QL",
            "store_type" => "shop",
            "is_open" => true,
            "max_delivery_distance" => 5.0
        ];

        /**
         * The reason we are detecting 5, is because the Base setup creates 4 stores
         */
        $this->postJson(route('add-store'), $payload, $this->goodHeader)
            ->assertOk()
            ->assertJson(['store_id' => 6]);
    }

    public function test_a_store_fails_validation_if_errors(): void
    {
        $payload = [
            "postcode" => "AB11QLASDFGHJ",
            "store_type" => "bus stop",
            "is_open" => true,
            "max_delivery_distance" => -10
        ];

        $this->postJson(route('add-store'), $payload, $this->goodHeader)
            ->assertJsonValidationErrors(['postcode', 'store_type', 'max_delivery_distance']);
    }

    public function test_failure_on_bad_access_token(): void
    {
        $payload = [
            "name" => "My Shop",
            "postcode" => "AB11QL",
            "store_type" => "shop",
            "is_open" => true,
            "max_delivery_distance" => 5.0
        ];

        $this->postJson(route('add-store'), $payload, $this->badHeader)
            ->assertUnauthorized();
    }
}
